@startuml class
class java.rmi.registry as "Registry" {
    {static} getRegistry(): Registry
    lookup(name: String): Remote
    bind(name: String, obj: Remote): void
}
interface java.rmi.Remote as "Remote" {
    {static} stub(): Remote
}
class java.rmi.locateRegistry as "LocateRegistry" {
    {static} getRegistry(): Registry
    {static} createRegistry(port: int): Registry
}

interface hello.helloInterface as "HelloRmiInterface" {
    sayHello(): String
}
class hello.server as "HelloRmiServer" {
    {static} main(args: String[]): void 
}
class hello.client as "HelloRmiClient" {
    {static} main(args: String[]): void 
}

registry --|> Remote: implements
java.rmi.Remote <|-- hello.helloInterface: extends
server .|> hello.helloInterface: implements
client ..> server: roept indirect aan
client ..> registry: haalt stub op uit ... 
note on link #yellow: voldoet aan\n HelloRmiInterface
server ..> registry: haalt skeleton\nop uit ...
note on link #yellow: voldoet aan\n HelloRmiInterface
client ..> locateRegistry: haalt aangemaakte \nregistry op uit
server ..> locateRegistry: maakt registry \n aan met
client ..> helloInterface: heeft stub gegenereerd \n volgens interface

@enduml